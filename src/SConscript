##
# @author Alexander Breuer (alex.breuer AT uni-jena.de)
#
# @section DESCRIPTION
# Collects sources for a build.
##
Import('env')

# gather sources
l_sources = [ 'solvers/Roe.cpp',
              'solvers/FWave.cpp',
              'patches/1d/WavePropagation1d.cpp',
              'patches/2d/WavePropagation2d.cpp',
              'simulator/Simulator.cpp',
              'setups/CustomSetup1d/CustomSetup1d.cpp',
              'setups/DamBreak1d/DamBreak1d.cpp',
              'setups/DamBreak2d/DamBreak2d.cpp',
              'setups/RareRare1d/RareRare1d.cpp',
              'setups/ShockShock1d/ShockShock1d.cpp',
              'setups/SubcriticalFlow1d/SubcriticalFlow1d.cpp',
              'setups/SupercriticalFlow1d/SupercriticalFlow1d.cpp',
              'setups/TsunamiEvent1d/TsunamiEvent1d.cpp',
              'setups/TsunamiEvent2d/TsunamiEvent2d.cpp',
              'setups/ArtificialTsunami2d/ArtificialTsunami2d.cpp',
              'configs/SimConfig.cpp',
              'io/Json/ConfigLoader.cpp',
              'io/NetCDF/NetCDF.cpp',
              'io/Csv/Csv.cpp'
              ]

for l_so in l_sources:
  env.sources.append( env.Object( l_so ) )

env.standalone = env.Object( "main.cpp" )

# gather unit tests
l_tests = [ 'tests.cpp',
            'solvers/Roe.test.cpp',
            'solvers/FWave.test.cpp',
            'patches/1d/WavePropagation1d.test.cpp',
            'patches/2d/WavePropagation2d.test.cpp',
            'simulator/Simulator.test.cpp',
            'setups/CustomSetup1d/CustomSetup1d.test.cpp',
            'setups/DamBreak1d/DamBreak1d.test.cpp',
            'setups/DamBreak2d/DamBreak2d.test.cpp',
            'setups/ShockShock1d/ShockShock1d.test.cpp',
            'setups/RareRare1d/RareRare1d.test.cpp',
            'setups/SubcriticalFlow1d/SubcriticalFlow1d.test.cpp',
            'setups/SupercriticalFlow1d/SupercriticalFlow1d.test.cpp',
            'setups/TsunamiEvent1d/TsunamiEvent1d.test.cpp',
            'setups/ArtificialTsunami2d/ArtificialTsunami2d.test.cpp',
            'configs/SimConfig.test.cpp',
            'io/Json/ConfigLoader.test.cpp',
            'io/NetCDF/NetCDF.test.cpp',
            'io/Csv/Csv.test.cpp',
            ]

for l_te in l_tests:
  env.tests.append( env.Object( l_te ) )

Export('env')
